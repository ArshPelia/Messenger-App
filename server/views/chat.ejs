<%- include('./layout.ejs'); %>

<main class="container">
    <h1 class="text-center"><%- title %></h1>

    <div class="row">
        <div class="col-md-8">
            <section id="message-container">
                <ul id="messages" class="list-unstyled">
                    <% messages.forEach(message => { %>
                    <li class="message"><%= message.username %>: <%= message.text %></li>
                    <% }) %>
                </ul>
            </section>
        </div>

        <div class="col-md-4">
            <section id="user-list">
                <h2>Online Users</h2>
                <ul id="online-users" class="list-unstyled">
                    <% onlineUsers.forEach(user => { %>
                    <li class="user"><%= user %></li>
                    <% }) %>
                </ul>
            </section>
        </div>
    </div>
</main>

<footer class="container">
    <form id="message-form" class="row">
        <input type="text" id="message-input" name="message" placeholder="Type your message..." class="col-md-8 form-control">
        <button type="button" id="send-button" class="col-md-4 btn btn-primary">Send</button>
    </form>
</footer>

<!-- <script src="/socket.io/socket.io.js"></script> -->
<script>
    const socket = io();

    // Emit message to the server when send button is clicked
    document.getElementById('send-button').addEventListener('click', () => {
        const messageInput = document.getElementById('message-input');
        const message = messageInput.value.trim();
        if (message !== '') {
            socket.emit('messageToAll', { message: message });
            messageInput.value = '';
        }
    });

    // Receive new messages from the server and update the UI
    socket.on('message', (data) => {
        const messageContainer = document.getElementById('messages');
        const messageElement = document.createElement('li');
        messageElement.className = 'message';
        messageElement.textContent = `${data.username}: ${data.message}`;
        messageContainer.appendChild(messageElement);
    });
</script>
